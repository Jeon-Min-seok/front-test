name: test # 이름설정

on:  # bracnch main push 감지 시 실행
  push:
    branches: [ main ]

jobs:
  build:   
    name: Build Image
    runs-on: ubuntu-latest # ubuntu에서 실행

   
    steps:

    - name: Check out code
      uses: actions/checkout@v2 #checkout action 사용
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2 # ecr이 위치하는 리전

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Get image version
      id: image
      run: |
        VERSION=$(echo \${{ github.sha }} | cut -c1-8)
        echo VERSION=$VERSION
        echo "::set-output name=version::$VERSION"

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: test-node # !!!!!!!본인의 ecr로 변경 필요!!!!!!!!
        IMAGE_TAG: ${{ steps.image.outputs.version }}
      run: | # 도커 파일 빌드 후 푸쉬
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
      # kustomize 명령을 가져온다.
    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v1

    - name: Checkout kustomize repository
      uses: actions/checkout@v2
      with:
          # kubernetes 설정정보 저장소
        repository: Jeon-Min-seok/argo-cd
        ref: main
          # 다른 저장소에 push 하려면 Personal Access Token이 필요.
        token: ${{ secrets.TOKEN }}
        path: argo-cd
      # 새 이미지 버전으로 파일 수정
    - name: Update Kubernetes resources
      run: |
        pwd
        cd test/
        echo \${{ steps.login-ecr.outputs.registry }}/\${{ env.ECR_REPOSITORY }}
        echo \${{ steps.login-ecr.outputs.registry }}/\${{ env.ECR_REPOSITORY }}:\${{ github.sha }}
        kustomize edit set image \${{ steps.login-ecr.outputs.registry }}/\${{ env.ECR_REPOSITORY }}=\${{ steps.login-ecr.outputs.registry }}/\${{ env.ECR_REPOSITORY }}:\${{ github.sha }}
        cat kustomization.yaml
          
      # 수정된 파일 commit & push
    - name: Pushes delpoyment file
      uses: dmnemec/copy_file_to_another_repo_action@main
      env:
      API_TOKEN_GITHUB: ${{ secrets.TOKEN }}
      with:
        source_file: 'test-deployment.yaml'
        destination_repo: 'Jeon-Min-seok/argo-cd'
        destination_folder: 'test'
        user_email: 'jeonms216@gmail.com'
        user_name: 'Jeon-Min-seok'
        commit_message: 'A custom message for the commit'
